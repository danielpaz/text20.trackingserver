/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dfki.km.text20.trackingserver.brain.adapter.impl.emotiv.raw.v1.wrapper;

class edkJNI {
  public final static native int EXP_NONE_get();
  public final static native int EXP_SIG_UNIVERSAL_get();
  public final static native int COG_NONE_get();
  public final static native int EE_UnknownEvent_get();
  public final static native int EE_EmulatorError_get();
  public final static native int EE_ReservedEvent_get();
  public final static native int EE_UserAdded_get();
  public final static native int EE_UserRemoved_get();
  public final static native int EE_EmoStateUpdated_get();
  public final static native int EE_ProfileEvent_get();
  public final static native int EE_CognitivEvent_get();
  public final static native int EE_ExpressivEvent_get();
  public final static native int EE_InternalStateChanged_get();
  public final static native int EE_AllEvent_get();
  public final static native int EE_ExpressivNoEvent_get();
  public final static native int EE_CognitivNoEvent_get();
  public final static native int ED_COUNTER_get();
  public final static native void InputSensorDescriptor_t_channelId_set(long jarg1, InputSensorDescriptor_t jarg1_, long jarg2);
  public final static native long InputSensorDescriptor_t_channelId_get(long jarg1, InputSensorDescriptor_t jarg1_);
  public final static native void InputSensorDescriptor_t_fExists_set(long jarg1, InputSensorDescriptor_t jarg1_, int jarg2);
  public final static native int InputSensorDescriptor_t_fExists_get(long jarg1, InputSensorDescriptor_t jarg1_);
  public final static native void InputSensorDescriptor_t_pszLabel_set(long jarg1, InputSensorDescriptor_t jarg1_, String jarg2);
  public final static native String InputSensorDescriptor_t_pszLabel_get(long jarg1, InputSensorDescriptor_t jarg1_);
  public final static native void InputSensorDescriptor_t_xLoc_set(long jarg1, InputSensorDescriptor_t jarg1_, double jarg2);
  public final static native double InputSensorDescriptor_t_xLoc_get(long jarg1, InputSensorDescriptor_t jarg1_);
  public final static native void InputSensorDescriptor_t_yLoc_set(long jarg1, InputSensorDescriptor_t jarg1_, double jarg2);
  public final static native double InputSensorDescriptor_t_yLoc_get(long jarg1, InputSensorDescriptor_t jarg1_);
  public final static native void InputSensorDescriptor_t_zLoc_set(long jarg1, InputSensorDescriptor_t jarg1_, double jarg2);
  public final static native double InputSensorDescriptor_t_zLoc_get(long jarg1, InputSensorDescriptor_t jarg1_);
  public final static native long new_InputSensorDescriptor_t();
  public final static native void delete_InputSensorDescriptor_t(long jarg1);
  public final static native int EE_EngineConnect();
  public final static native int EE_EngineRemoteConnect(String jarg1, int jarg2);
  public final static native int EE_EngineDisconnect();
  public final static native int EE_EnableDiagnostics(String jarg1, int jarg2, int jarg3);
  public final static native long EE_EmoEngineEventCreate();
  public final static native long EE_ProfileEventCreate();
  public final static native void EE_EmoEngineEventFree(long jarg1);
  public final static native long EE_EmoStateCreate();
  public final static native void EE_EmoStateFree(long jarg1);
  public final static native int EE_EmoEngineEventGetType(long jarg1);
  public final static native int EE_CognitivEventGetType(long jarg1);
  public final static native int EE_ExpressivEventGetType(long jarg1);
  public final static native int EE_EmoEngineEventGetUserId(long jarg1, long jarg2);
  public final static native int EE_EmoEngineEventGetEmoState(long jarg1, long jarg2);
  public final static native int EE_EngineGetNextEvent(long jarg1);
  public final static native int EE_EngineClearEventQueue(int jarg1);
  public final static native int EE_EngineGetNumUser(long jarg1);
  public final static native int EE_SetHardwarePlayerDisplay(long jarg1, long jarg2);
  public final static native int EE_SetUserProfile(long jarg1, long jarg2, long jarg3);
  public final static native int EE_GetUserProfile(long jarg1, long jarg2);
  public final static native int EE_GetBaseProfile(long jarg1);
  public final static native int EE_GetUserProfileSize(long jarg1, long jarg2);
  public final static native int EE_GetUserProfileBytes(long jarg1, long jarg2, long jarg3);
  public final static native int EE_LoadUserProfile(long jarg1, String jarg2);
  public final static native int EE_SaveUserProfile(long jarg1, String jarg2);
  public final static native int EE_ExpressivSetThreshold(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int EE_ExpressivGetThreshold(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native int EE_ExpressivSetTrainingAction(long jarg1, long jarg2);
  public final static native int EE_ExpressivSetTrainingControl(long jarg1, int jarg2);
  public final static native int EE_ExpressivGetTrainingAction(long jarg1, long jarg2);
  public final static native int EE_ExpressivGetTrainingTime(long jarg1, long jarg2);
  public final static native int EE_ExpressivGetTrainedSignatureActions(long jarg1, long jarg2);
  public final static native int EE_ExpressivGetTrainedSignatureAvailable(long jarg1, long jarg2);
  public final static native int EE_ExpressivSetSignatureType(long jarg1, int jarg2);
  public final static native int EE_ExpressivGetSignatureType(long jarg1, long jarg2);
  public final static native int EE_CognitivSetActiveActions(long jarg1, long jarg2);
  public final static native int EE_CognitivGetActiveActions(long jarg1, long jarg2);
  public final static native int EE_CognitivGetTrainingTime(long jarg1, long jarg2);
  public final static native int EE_CognitivSetTrainingControl(long jarg1, int jarg2);
  public final static native int EE_CognitivSetTrainingAction(long jarg1, long jarg2);
  public final static native int EE_CognitivGetTrainingAction(long jarg1, long jarg2);
  public final static native int EE_CognitivGetTrainedSignatureActions(long jarg1, long jarg2);
  public final static native int EE_CognitivGetOverallSkillRating(long jarg1, long jarg2);
  public final static native int EE_CognitivGetActionSkillRating(long jarg1, long jarg2, long jarg3);
  public final static native int EE_CognitivSetActivationLevel(long jarg1, int jarg2);
  public final static native int EE_CognitivSetActionSensitivity(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native int EE_CognitivGetActivationLevel(long jarg1, long jarg2);
  public final static native int EE_CognitivGetActionSensitivity(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int EE_CognitivStartSamplingNeutral(long jarg1);
  public final static native int EE_CognitivStopSamplingNeutral(long jarg1);
  public final static native int EE_CognitivSetSignatureCaching(long jarg1, long jarg2);
  public final static native int EE_CognitivGetSignatureCaching(long jarg1, long jarg2);
  public final static native int EE_CognitivSetSignatureCacheSize(long jarg1, long jarg2);
  public final static native int EE_CognitivGetSignatureCacheSize(long jarg1, long jarg2);
  public final static native int EE_HeadsetGetSensorDetails(long jarg1, long jarg2, InputSensorDescriptor_t jarg2_);
  public final static native int EE_HardwareGetVersion(long jarg1, long jarg2);
  public final static native int EE_SoftwareGetVersion(String jarg1, long jarg2, long jarg3);
  public final static native int EE_HeadsetGetGyroDelta(long jarg1, long jarg2, long jarg3);
  public final static native int EE_HeadsetGyroRezero(long jarg1);
  public final static native long EE_OptimizationParamCreate();
  public final static native void EE_OptimizationParamFree(long jarg1);
  public final static native int EE_OptimizationEnable(long jarg1);
  public final static native int EE_OptimizationIsEnabled(long jarg1);
  public final static native int EE_OptimizationDisable();
  public final static native int EE_OptimizationGetParam(long jarg1);
  public final static native int EE_OptimizationGetVitalAlgorithm(long jarg1, long jarg2, long jarg3);
  public final static native int EE_OptimizationSetVitalAlgorithm(long jarg1, long jarg2, long jarg3);
  public final static native int EE_ResetDetection(long jarg1, long jarg2, long jarg3);
  public final static native long EE_DataCreate();
  public final static native void EE_DataFree(long jarg1);
  public final static native int EE_DataUpdateHandle(long jarg1, long jarg2);
  public final static native int EE_DataGet(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native int EE_DataGetNumberOfSample(long jarg1, long jarg2);
  public final static native int EE_DataSetBufferSizeInSec(float jarg1);
  public final static native int EE_DataGetBufferSizeInSec(long jarg1);
  public final static native int EE_DataAcquisitionEnable(long jarg1, boolean jarg2);
  public final static native int EE_DataAcquisitionIsEnabled(long jarg1, long jarg2);
  public final static native int EE_DataSetSychronizationSignal(long jarg1, int jarg2);
  public final static native int EE_DataSetMarker(long jarg1, int jarg2);
  public final static native int EE_DataGetSamplingRate(long jarg1, long jarg2);
  public final static native long pUIntToUInt(long jarg1);
  public final static native long createPUInt(long jarg1);
  public final static native void freePUInt(long jarg1);
  public final static native long createDataBuffer(long jarg1);
  public final static native void freeDataBuffer(long jarg1);
  public final static native double readFromDataBuffer(long jarg1, int jarg2);
  public final static native int dataGetNumberOfSample(long jarg1, long jarg2);
  public final static native int dataAcquisitionEnable(long jarg1, boolean jarg2);
}
